(window.webpackJsonp=window.webpackJsonp||[]).push([[783],{1069:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),s=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return n?r.a.createElement(b,c(c({ref:t},u),{},{components:n})):r.a.createElement(b,c({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1070:function(e,t,n){"use strict";(function(e){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.OssOnly=t.FbInternalOnly=t.isInternal=t.validateFbContentArgs=t.fbInternalOnly=t.fbContent=t.bloks=void 0,t.bloks=o(n(1073));const i=["internal","external"];let c;try{c=n(1071).usePluginData}catch(p){c=null}function l(e){return s(e),d()?"internal"in e?u(e.internal):[]:"external"in e?u(e.external):[]}function u(e){return"function"==typeof e?e():e}function s(e){if("object"!=typeof e)throw new Error(`fbContent() args must be an object containing keys: ${i}. Instead got ${e}`);if(!Object.keys(e).find((e=>i.find((t=>t===e)))))throw new Error(`No valid args found in ${JSON.stringify(e)}. Accepted keys: ${i}`);const t=Object.keys(e).filter((e=>!i.find((t=>t===e))));if(t.length>0)throw new Error(`Unexpected keys ${t} found in fbContent() args. Accepted keys: ${i}`)}function d(){return e.env.FB_INTERNAL||c&&c("internaldocs-fb").FB_INTERNAL}t.fbContent=l,t.fbInternalOnly=function(e){return l({internal:e})},t.validateFbContentArgs=s,t.isInternal=d,t.FbInternalOnly=function(e){return d()?e.children:null},t.OssOnly=function(e){return d()?null:e.children}}).call(this,n(1072))},1071:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return r})),n.d(t,"useAllPluginInstancesData",(function(){return o})),n.d(t,"usePluginData",(function(){return i}));var a=n(22);function r(){var e=Object(a.default)().globalData;if(!e)throw new Error("Docusaurus global data not found");return e}function o(e){var t=r()[e];if(!t)throw new Error("Docusaurus plugin global data not found for pluginName="+e);return t}function i(e,t){void 0===t&&(t="default");var n=o(e)[t];if(!n)throw new Error("Docusaurus plugin global data not found for pluginName="+e+" and pluginId="+t);return n}},1072:function(e,t){var n,a,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function c(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{a="function"==typeof clearTimeout?clearTimeout:i}catch(e){a=i}}();var l,u=[],s=!1,d=-1;function p(){s&&l&&(s=!1,l.length?u=l.concat(u):d=-1,u.length&&m())}function m(){if(!s){var e=c(p);s=!0;for(var t=u.length;t;){for(l=u,u=[];++d<t;)l&&l[d].run();d=-1,t=u.length}l=null,s=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===i||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function b(e,t){this.fun=e,this.array=t}function f(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new b(e,t)),1!==u.length||s||c(m)},b.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=f,r.addListener=f,r.once=f,r.off=f,r.removeListener=f,r.removeAllListeners=f,r.emit=f,r.prependListener=f,r.prependOnceListener=f,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},1073:function(e,t,n){"use strict";var a=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(r,o){function i(e){try{l(a.next(e))}catch(t){o(t)}}function c(e){try{l(a.throw(e))}catch(t){o(t)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,c)}l((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getSpecInfo=void 0;const r=n(1074);t.getSpecInfo=function(e){return a(this,void 0,void 0,(function*(){return yield r.call({module:"bloks",api:"getSpecInfo",args:{styleId:e}})}))}},1074:function(e,t,n){"use strict";var a=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(r,o){function i(e){try{l(a.next(e))}catch(t){o(t)}}function c(e){try{l(a.throw(e))}catch(t){o(t)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,c)}l((a=a.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.call=void 0;let r=!1,o=0;const i={};t.call=function(e){return a(this,void 0,void 0,(function*(){if("staticdocs.thefacebook.com"!==window.location.hostname&&"localhost"!==window.location.hostname)return Promise.reject(new Error("Not running on static docs"));r||(r=!0,window.addEventListener("message",(e=>{if("static-docs-bridge-response"!==e.data.event)return;const t=e.data.id;t in i||console.error(`Recieved response for id: ${t} with no matching receiver`),"response"in e.data?i[t].resolve(e.data.response):i[t].reject(new Error(e.data.error)),delete i[t]})));const t=o++,n=new Promise(((e,n)=>{i[t]={resolve:e,reject:n}})),a={event:"static-docs-bridge-call",id:t,module:e.module,api:e.api,args:e.args},c="localhost"===window.location.hostname?"*":"https://www.internalfb.com";return window.parent.postMessage(a,c),n}))}},1075:function(e,t,n){"use strict";n(60);var a=n(1070),r=n(0);var o=function(){var e=r.useState(!1),t=e[0],n=e[1],a=function(e){n(!0),function(e){window.ga&&window.ga("send",{hitType:"event",eventCategory:"button",eventAction:"feedback",eventValue:e})}(e)};return t?r.createElement("div",{className:"docsRating",id:"docsRating"},r.createElement("hr",null),"Thank you for letting us know!"):r.createElement("div",{className:"docsRating",id:"docsRating"},r.createElement("hr",null),"Is this page useful?",r.createElement("svg",{className:"i_thumbsup",alt:"Like",id:"docsRating-like",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 81.13 89.76",onClick:function(){return a(1)}},r.createElement("path",{d:"M22.9 6a18.57 18.57 0 002.67 8.4 25.72 25.72 0 008.65 7.66c3.86 2 8.67 7.13 13.51 11 3.86 3.11 8.57 7.11 11.54 8.45s13.59.26 14.64 1.17c1.88 1.63 1.55 9-.11 15.25-1.61 5.86-5.96 10.55-6.48 16.86-.4 4.83-2.7 4.88-10.93 4.88h-1.35c-3.82 0-8.24 2.93-12.92 3.62a68 68 0 01-9.73.5c-3.57 0-7.86-.08-13.25-.08-3.56 0-4.71-1.83-4.71-4.48h8.42a3.51 3.51 0 000-7H12.28a2.89 2.89 0 01-2.88-2.88 1.91 1.91 0 01.77-1.78h16.46a3.51 3.51 0 000-7H12.29c-3.21 0-4.84-1.83-4.84-4a6.41 6.41 0 011.17-3.78h19.06a3.5 3.5 0 100-7H9.75A3.51 3.51 0 016 42.27a3.45 3.45 0 013.75-3.48h13.11c5.61 0 7.71-3 5.71-5.52-4.43-4.74-10.84-12.62-11-18.71-.15-6.51 2.6-7.83 5.36-8.56m0-6a6.18 6.18 0 00-1.53.2c-6.69 1.77-10 6.65-9.82 14.5.08 5.09 2.99 11.18 8.52 18.09H9.74a9.52 9.52 0 00-6.23 16.9 12.52 12.52 0 00-2.07 6.84 9.64 9.64 0 003.65 7.7 7.85 7.85 0 00-1.7 5.13 8.9 8.9 0 005.3 8.13 6 6 0 00-.26 1.76c0 6.37 4.2 10.48 10.71 10.48h13.25a73.75 73.75 0 0010.6-.56 35.89 35.89 0 007.58-2.18 17.83 17.83 0 014.48-1.34h1.35c4.69 0 7.79 0 10.5-1 3.85-1.44 6-4.59 6.41-9.38.2-2.46 1.42-4.85 2.84-7.62a41.3 41.3 0 003.42-8.13 48 48 0 001.59-10.79c.1-5.13-1-8.48-3.35-10.55-2.16-1.87-4.64-1.87-9.6-1.88a46.86 46.86 0 01-6.64-.29c-1.92-.94-5.72-4-8.51-6.3l-1.58-1.28c-1.6-1.3-3.27-2.79-4.87-4.23-3.33-3-6.47-5.79-9.61-7.45a20.2 20.2 0 01-6.43-5.53 12.44 12.44 0 01-1.72-5.36 6 6 0 00-6-5.86z"})),r.createElement("svg",{className:"i_thumbsdown",alt:"Dislike",id:"docsRating-dislike",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 81.13 89.76",onClick:function(){return a(0)}},r.createElement("path",{d:"M22.9 6a18.57 18.57 0 002.67 8.4 25.72 25.72 0 008.65 7.66c3.86 2 8.67 7.13 13.51 11 3.86 3.11 8.57 7.11 11.54 8.45s13.59.26 14.64 1.17c1.88 1.63 1.55 9-.11 15.25-1.61 5.86-5.96 10.55-6.48 16.86-.4 4.83-2.7 4.88-10.93 4.88h-1.35c-3.82 0-8.24 2.93-12.92 3.62a68 68 0 01-9.73.5c-3.57 0-7.86-.08-13.25-.08-3.56 0-4.71-1.83-4.71-4.48h8.42a3.51 3.51 0 000-7H12.28a2.89 2.89 0 01-2.88-2.88 1.91 1.91 0 01.77-1.78h16.46a3.51 3.51 0 000-7H12.29c-3.21 0-4.84-1.83-4.84-4a6.41 6.41 0 011.17-3.78h19.06a3.5 3.5 0 100-7H9.75A3.51 3.51 0 016 42.27a3.45 3.45 0 013.75-3.48h13.11c5.61 0 7.71-3 5.71-5.52-4.43-4.74-10.84-12.62-11-18.71-.15-6.51 2.6-7.83 5.36-8.56m0-6a6.18 6.18 0 00-1.53.2c-6.69 1.77-10 6.65-9.82 14.5.08 5.09 2.99 11.18 8.52 18.09H9.74a9.52 9.52 0 00-6.23 16.9 12.52 12.52 0 00-2.07 6.84 9.64 9.64 0 003.65 7.7 7.85 7.85 0 00-1.7 5.13 8.9 8.9 0 005.3 8.13 6 6 0 00-.26 1.76c0 6.37 4.2 10.48 10.71 10.48h13.25a73.75 73.75 0 0010.6-.56 35.89 35.89 0 007.58-2.18 17.83 17.83 0 014.48-1.34h1.35c4.69 0 7.79 0 10.5-1 3.85-1.44 6-4.59 6.41-9.38.2-2.46 1.42-4.85 2.84-7.62a41.3 41.3 0 003.42-8.13 48 48 0 001.59-10.79c.1-5.13-1-8.48-3.35-10.55-2.16-1.87-4.64-1.87-9.6-1.88a46.86 46.86 0 01-6.64-.29c-1.92-.94-5.72-4-8.51-6.3l-1.58-1.28c-1.6-1.3-3.27-2.79-4.87-4.23-3.33-3-6.47-5.79-9.61-7.45a20.2 20.2 0 01-6.43-5.53 12.44 12.44 0 01-1.72-5.36 6 6 0 00-6-5.86z"})))},i=function(){return null};t.a=function(){return Object(a.fbContent)({internal:r.createElement(i,null),external:r.createElement(o,null)})}},858:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(1069)),i=n(1075),c=n(1070),l={id:"local-data-updates",title:"Local Data Updates",slug:"/guided-tour/updating-data/local-data-updates/"},u={unversionedId:"guided-tour/updating-data/local-data-updates",id:"guided-tour/updating-data/local-data-updates",isDocsHomePage:!1,title:"Local Data Updates",description:"Local data updates",source:"@site/docs/guided-tour/updating-data/local-data-updates.md",slug:"/guided-tour/updating-data/local-data-updates/",permalink:"/docs/next/guided-tour/updating-data/local-data-updates/",editUrl:"https://github.com/facebook/relay/edit/master/website-v2/docs/docs/guided-tour/updating-data/local-data-updates.md",version:"current",lastUpdatedBy:"Robert Balicki",lastUpdatedAt:1614303211,sidebar:"docs",previous:{title:"GraphQL Subscriptions",permalink:"/docs/next/guided-tour/updating-data/graphql-subscriptions/"},next:{title:"Client-Only Data",permalink:"/docs/next/guided-tour/updating-data/client-only-data/"}},s=[{value:"Local data updates",id:"local-data-updates",children:[{value:"commitLocalUpdate",id:"commitlocalupdate",children:[]},{value:"commitPayload",id:"commitpayload",children:[]},{value:"Local editing / creation preview flow",id:"local-editing--creation-preview-flow",children:[]}]}],d={toc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"local-data-updates"},"Local data updates"),Object(o.b)("p",null,"There are a couple of APIs that Relay provides in order to make purely local updates to the Relay store (i.e. updates not tied to a server operation)."),Object(o.b)("p",null,"Note that local data updates can be made both on ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../client-only-data/"}),"client-only data"),", or on regular data that was fetched from the server via an operation."),Object(o.b)("h3",{id:"commitlocalupdate"},"commitLocalUpdate"),Object(o.b)("p",null,"To make updates using an ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../graphql-mutations/#updater-functions"}),Object(o.b)("inlineCode",{parentName:"a"},"updater"))," function, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"commitLocalUpdate")," API:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import type {Environment} from 'react-relay';\n\nconst {commitLocalUpdate, graphql} = require('react-relay');\n\nfunction commitCommentCreateLocally(\n  environment: Environment,\n  feedbackID: string,\n) {\n  return commitLocalUpdate(environment, store => {\n    const feedbackRecord = store.get(feedbackID);\n    const connectionRecord = ConnectionHandler.getConnection(\n      userRecord,\n      'CommentsComponent_comments_connection',\n    );\n\n    // Create a new local Comment from scratch\n    const id = `client:new_comment:${randomID()}`;\n    const newCommentRecord = store.create(id, 'Comment');\n\n    // ... update new comment with content\n\n    // Create new edge from scratch\n    const newEdge = ConnectionHandler.createEdge(\n      store,\n      connectionRecord,\n      newCommentRecord,\n      'CommentEdge' /* GraphQl Type for edge */,\n    );\n\n    // Add edge to the end of the connection\n    ConnectionHandler.insertEdgeAfter(connectionRecord, newEdge);\n  });\n}\n\nmodule.exports = {commit: commitCommentCreateLocally};\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"commitLocalUpdate")," update simply takes an environment and an updater function.",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"updater")," takes a ",Object(o.b)("em",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"em"},"store"))," argument, which is an instance of a ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"../../../api-reference/store/"}),Object(o.b)("inlineCode",{parentName:"a"},"RecordSourceSelectorProxy")),";  this interface allows you to ",Object(o.b)("em",{parentName:"li"},"imperatively")," write and read data directly to and from the Relay store. This means that you have full control over how to update the store: you can ",Object(o.b)("em",{parentName:"li"},"create entirely new records"),", or ",Object(o.b)("em",{parentName:"li"},"update or delete existing ones"),"."))),Object(o.b)("li",{parentName:"ul"},"In our specific example, we're adding a new comment to our local store when. Specifically, we're adding a new item to a connection; for more details on the specifics of how that works, check out our ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"../../list-data/adding-and-removing-items/"}),"Adding and Removing Items from a Connection")," section."),Object(o.b)("li",{parentName:"ul"},"Note that any local data updates will automatically cause components subscribed to the data to be notified of the change and re-render.")),Object(o.b)("h3",{id:"commitpayload"},"commitPayload"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"commitPayload")," takes an ",Object(o.b)("inlineCode",{parentName:"p"},"OperationDescriptor")," and the payload for the query, and writes it to the Relay Store. The payload will be resolved like a normal server response for a query, and will also resolve Data Driven Dependencies that are passed as ",Object(o.b)("inlineCode",{parentName:"p"},"JSResource"),", ",Object(o.b)("inlineCode",{parentName:"p"},"requireDefer"),", etc."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import type {FooQueryRawResponse} from 'FooQuery.graphql'\n\nconst {createOperationDescriptor} = require('relay-runtime');\n\nconst operationDescriptor = createOperationDescriptor(FooQuery, {\n  id: 'an-id',\n  otherVariable: 'value',\n});\n\nconst payload: FooQueryRawResponse = {...};\n\nenvironment.commitPayload(operation, payload);\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"An ",Object(o.b)("inlineCode",{parentName:"li"},"OperationDescriptor")," can be created by ",Object(o.b)("inlineCode",{parentName:"li"},"createOperationDescriptor"),"; it takes the query and the query variables."),Object(o.b)("li",{parentName:"ul"},"The payload can be typed using the Flow type generated by adding  ",Object(o.b)("inlineCode",{parentName:"li"},"@raw_response_type")," to the query."),Object(o.b)("li",{parentName:"ul"},"Note that any local data updates will automatically cause components subscribed to the data to be notified of the change and re-render.")),Object(o.b)(c.FbInternalOnly,{mdxType:"FbInternalOnly"},Object(o.b)("h3",{id:"local-editing--creation-preview-flow"},"Local editing / creation preview flow"),Object(o.b)("p",null,"Relay provides several primitives for achieving the preview flow, where a preview view immediately reflects what a user is editing in a form."),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://fburl.com/diffusion/mptmlybb"}),"Here is a solid example")," from the events team."),Object(o.b)("p",null,"Relay Environment for local preview:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The preview view should commit updates to a separate relay environment to avoid overwriting server data with local updates.")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Use ",Object(o.b)("inlineCode",{parentName:"li"},"CometEnvironmentFactory.createLocalEnvironment")," or ",Object(o.b)("inlineCode",{parentName:"li"},"createFBLocalEnvironment")," to create a unique local Relay environment.")),Object(o.b)("p",null,"Creating the environment:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const {createLocalEnvironment} = require('CometRelayEnvironmentFactory');\nconst eventPreviewEnvironment = createLocalEnvironment();`\n")),Object(o.b)("p",null," Example: ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://fburl.com/ins2k98p"}),"https://fburl.com/ins2k98p")),Object(o.b)("p",null,"Rendering the preview:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The preview should be rendered using ",Object(o.b)("inlineCode",{parentName:"li"},"useLazyLoadQuery_DEPRECATED")," with ",Object(o.b)("inlineCode",{parentName:"li"},"store-only")," fetch-policy, so that it can read the data from the local environment without sending requests to the server."),Object(o.b)("li",{parentName:"ul"},"A query should be defined for the preview, so that Relay can use it to read and updates the data."),Object(o.b)("li",{parentName:"ul"},"Adding ",Object(o.b)("inlineCode",{parentName:"li"},"@raw_response_type")," onto the query generates the flow type for the payload for updating the data.")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const data = useLazyLoadQuery_DEPRECATED<EventCometFormPreviewRootQuery>(\n  previewQuery,\n  {\n    eventID: EVENT_FORM_PREVIEW_ID,\n    isPreview: true,\n    scale: WebPixelRatio.get(),\n  },\n  {fetchPolicy: 'store-only'},\n);\n")),Object(o.b)("p",null,"Example: ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://fburl.com/1zki95ng"}),"https://fburl.com/1zki95ng")),Object(o.b)("p",null,"Updating the preview:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Store form states in React state(reducer) or context, then construct the full payload data for the preview query defined above."),Object(o.b)("li",{parentName:"ul"},"Use ",Object(o.b)("inlineCode",{parentName:"li"},"commitPayload")," method on the local environment to update the data for the preview."),Object(o.b)("li",{parentName:"ul"},"Use ",Object(o.b)("inlineCode",{parentName:"li"},"generateUniqueClientID")," from ",Object(o.b)("inlineCode",{parentName:"li"},"CometRelay")," or ",Object(o.b)("inlineCode",{parentName:"li"},"relay-runtime")," to create unique ids for the id fields in the payload, so that all local updates won't cause conflict ids in relay store."),Object(o.b)("li",{parentName:"ul"},"Use ",Object(o.b)("inlineCode",{parentName:"li"},"RawResponseType")," in the generated query file to flow type the payload, this avoids missing fields or wrong fields."),Object(o.b)("li",{parentName:"ul"},"Use ",Object(o.b)("inlineCode",{parentName:"li"},"createPayloadFor3DField(fragmentName, normalizationFileResource, componentFileResource, restOfTheResponse)")," to provide the field with 3D dependencies. With ",Object(o.b)("inlineCode",{parentName:"li"},"RawResponseType")," flow will statically make sure the document name and the rest of the response is correct.")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const {\n  createOperationDescriptor,\n  generateUniqueClientID,\n  createPayloadFor3DField,\n} = require('relay-runtime'); // or require('CometRelay') for Comet\nconst JSResource = require('JSResource');\n\nconst EVENT_FORM_PREVIEW_ID = generateUniqueClientID();\nconst previewQueryOperation = createOperationDescriptor(EventCometFormPreviewRootQuery, {\n  eventID: EVENT_FORM_PREVIEW_ID,\n});\nconst rendererAST = JSResource('m#SomePreview_section$normalization.graphql');\nconst rendererComponent = JSResource('m#SomePreview.react');\n\nconst payload: PreviewRawResponseType = {\n  id: EVENT_FORM_PREVIEW_ID,\n  preview_section_renderer: createPayloadFor3DField(\n    'PreviewFragmentName',\n    rendererAST,\n    rendererComponent,\n    {\n       __typename: 'SOME_TYPE',\n       name: '<name>',\n    }\n  )\n}\n\nlocalEnvironment.commitPayload(previewQueryOperation, payload);\n\n")),Object(o.b)("p",null,"Example: ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://fburl.com/r8tnzcxa"}),"https://fburl.com/r8tnzcxa"))),Object(o.b)(i.a,{mdxType:"DocsRating"}))}p.isMDXComponent=!0}}]);